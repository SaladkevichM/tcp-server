
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.stream.Collectors;

import com.server.util.Util;
import org.junit.Assert;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.HttpClientBuilder;
import org.junit.Before;

public class Weather {

    HttpUriRequest request;
    ObjectMapper mapper = new ObjectMapper();
    String query = "London";

    @Before
    public void setUp() throws UnsupportedEncodingException {
        request = new HttpGet(Util.getProperty("api_url") + "?appid=" + Util.getProperty("api_key")
                + "&q=" + URLEncoder.encode(query, "UTF-8"));
    }

    @Test
    public void apiAccessTest() throws ClientProtocolException, IOException {
        HttpResponse httpResponse = HttpClientBuilder.create().build().execute(request);
        Assert.assertEquals(HttpStatus.SC_OK, httpResponse.getStatusLine().getStatusCode());
    }

    @Test
    public void apiFormatTest() throws UnsupportedOperationException, IOException {

        HttpResponse httpResponse = HttpClientBuilder.create().build().execute(request);
        String result =
                new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent()))
                        .lines().collect(Collectors.joining("\n"));
        System.out.println(result);
        HashMap<String, Object> map = mapper.readValue(result, HashMap.class);

        Assert.assertEquals(true, map.containsKey("weather"));
    }

    @Test
    public void telnetAccessTest() throws IOException {
        /*
        Server.main(new String[] {""});
        Process process = Runtime.getRuntime().exec("java -jar " + System.getProperty("user.dir")
                + "\\build\\libs\\tcp-server-0.9.jar\"");

        Socket socket = new Socket();
        socket.connect(new InetSocketAddress("127.0.0.1", Server.PORT_NUMBER));

        Assert.assertEquals(true, socket.isConnected());
        socket.close();

        process.destroy();*/
    }

}
